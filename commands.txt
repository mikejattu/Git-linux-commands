git clone <ssh link from the github repo> # to clone the repo

# creating a new branch and doing the changes
git branch <branch name> # to create a new branch
git branch -a # to see all the branches
git checkout <branch name> # to switch to the branch
git checkout -b <branch name> # to create a new branch and switch to it
git status # to see the status of the repo

# deleting the repo from the local system
step 1:
git branch -d <branch name> # to delete the branch if it is merged
or
git branch -D <branch name> # to delete the branch even if it is not merged

step 2:
git push origin --delete <branch-name>  

Alternatively:
git push origin :<branch-name> # this is used to delete the branch on the GitHub repository and this change is not done in the remote system

# to add, commit and push the changes to the branch
git add <file name> # to add the file to the staging area
git add . # to add all the files to the staging area
git commit -m "commit message" # to commit the changes
git push origin <branch name> # to push the changes to the branch
git pull origin <branch name> # to pull the changes from the branch

git log # to see the commit history
git log --oneline # to see the commit history in one line

# merging the changes to the main repo
git checkout main # move to the main repo
git pull origin main  # Ensure your local main branch is up-to-date with the remote main branch.
git merge <branch name> # to merge the branch to the master
# Resolve Conflicts (if any)
git add <conflicted-file>
# After resolving conflicts in all files, continue the merge:
git merge --continue
# Commit the Merge
git commit -m "Merge feature-branch into main"
git push origin main
